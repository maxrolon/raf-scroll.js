(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var requestFrame = window.requestAnimationFrame;
var cancelFrame = window.cancelAnimationFrame;
var scrollChanged = void 0,
    y = void 0,
    prevY = -1,
    idle = true,
    queue = [],
    timeout = void 0,
    tickId = void 0,
    init = false;

if (!requestFrame) {
  ['ms', 'moz', 'webkit', 'o'].every(function (prefix) {
    requestFrame = window[prefix + 'RequestAnimationFrame'];
    cancelFrame = window[prefix + 'CancelAnimationFrame'] || window[prefix + 'CancelRequestAnimationFrame'];
    return !requestFrame;
  });
}

var isSupported = !!requestFrame;

var enable = function enable() {
  window.addEventListener('scroll', debounce);
  document.body.addEventListener('touchmove', debounce);
};

var disable = function disable() {
  window.removeEventListener('scroll', debounce);
  document.body.removeEventListener('touchmove', debounce);
};

var debounce = function debounce() {
  if (!tickId) {
    disable();
    tick();
  }
};

var tick = function tick() {
  tickId = requestFrame(handleScroll);
};

var handleScroll = function handleScroll() {
  y = window.pageYOffset;
  queue.forEach(function (fn) {
    return fn(y, prevY);
  });

  scrollChanged = false;
  if (prevY != y) {
    scrollChanged = true;
    prevY = y;
  }

  if (scrollChanged) {
    clearTimeout(timeout);
    timeout = null;
  } else if (!timeout) {
    timeout = setTimeout(detectIdle, 200);
  }

  tick();
};

var detectIdle = function detectIdle() {
  cancelFrame(tickId);
  tickId = null;
  enable();
};

exports.default = function (cb) {
  if (isSupported) {
    queue.push(cb);
    if (!init) {
      init = true;
      debounce();
      enable();
    }
  } else {
    console.warn('Request Animation Frame not supported');
  }
};

},{}],2:[function(require,module,exports){
'use strict';

var _main = require('./../src/main.js');

var _main2 = _interopRequireDefault(_main);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _main2.default)(function (x, y) {
  return console.dir([x, y]);
});

},{"./../src/main.js":1}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvbWFpbi5qcyIsInRlc3QvZGV2LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUNBQSxJQUFJLGVBQWUsT0FBTyxxQkFBMUI7QUFDQSxJQUFJLGNBQWUsT0FBTyxvQkFBMUI7QUFDQSxJQUFJLHNCQUFKO0FBQUEsSUFBbUIsVUFBbkI7QUFBQSxJQUFzQixRQUFRLENBQUMsQ0FBL0I7QUFBQSxJQUFrQyxPQUFPLElBQXpDO0FBQUEsSUFBK0MsUUFBUSxFQUF2RDtBQUFBLElBQTJELGdCQUEzRDtBQUFBLElBQW9FLGVBQXBFO0FBQUEsSUFBNEUsT0FBTyxLQUFuRjs7QUFFQSxJQUFJLENBQUMsWUFBTCxFQUFtQjtBQUNqQixHQUFDLElBQUQsRUFBTyxLQUFQLEVBQWMsUUFBZCxFQUF3QixHQUF4QixFQUE2QixLQUE3QixDQUFtQyxrQkFBVTtBQUMzQyxtQkFBZSxPQUFPLFNBQVMsdUJBQWhCLENBQWY7QUFDQSxrQkFBZSxPQUFPLFNBQVMsc0JBQWhCLEtBQ0EsT0FBTyxTQUFTLDZCQUFoQixDQURmO0FBRUEsV0FBTyxDQUFDLFlBQVI7QUFDRCxHQUxEO0FBTUQ7O0FBRUQsSUFBTSxjQUFjLENBQUMsQ0FBQyxZQUF0Qjs7QUFFQSxJQUFNLFNBQVMsU0FBVCxNQUFTLEdBQU07QUFDbkIsU0FBTyxnQkFBUCxDQUF3QixRQUF4QixFQUFrQyxRQUFsQztBQUNBLFdBQVMsSUFBVCxDQUFjLGdCQUFkLENBQStCLFdBQS9CLEVBQTRDLFFBQTVDO0FBQ0QsQ0FIRDs7QUFLQSxJQUFNLFVBQVUsU0FBVixPQUFVLEdBQU07QUFDcEIsU0FBTyxtQkFBUCxDQUEyQixRQUEzQixFQUFxQyxRQUFyQztBQUNBLFdBQVMsSUFBVCxDQUFjLG1CQUFkLENBQWtDLFdBQWxDLEVBQStDLFFBQS9DO0FBQ0QsQ0FIRDs7QUFLQSxJQUFNLFdBQVcsU0FBWCxRQUFXLEdBQU07QUFDckIsTUFBSSxDQUFDLE1BQUwsRUFBWTtBQUNWO0FBQ0E7QUFDRDtBQUNGLENBTEQ7O0FBT0EsSUFBTSxPQUFPLFNBQVAsSUFBTyxHQUFNO0FBQ2pCLFdBQVMsYUFBYSxZQUFiLENBQVQ7QUFDRCxDQUZEOztBQUlBLElBQU0sZUFBZSxTQUFmLFlBQWUsR0FBTTtBQUN6QixNQUFJLE9BQU8sV0FBWDtBQUNBLFFBQU0sT0FBTixDQUFlO0FBQUEsV0FBTSxHQUFHLENBQUgsRUFBTSxLQUFOLENBQU47QUFBQSxHQUFmOztBQUVBLGtCQUFnQixLQUFoQjtBQUNBLE1BQUksU0FBUyxDQUFiLEVBQWU7QUFDYixvQkFBZ0IsSUFBaEI7QUFDQSxZQUFRLENBQVI7QUFDRDs7QUFFRCxNQUFJLGFBQUosRUFBa0I7QUFDaEIsaUJBQWEsT0FBYjtBQUNBLGNBQVUsSUFBVjtBQUNELEdBSEQsTUFHTyxJQUFJLENBQUMsT0FBTCxFQUFhO0FBQ2xCLGNBQVUsV0FBVyxVQUFYLEVBQXVCLEdBQXZCLENBQVY7QUFDRDs7QUFFRDtBQUNELENBbEJEOztBQW9CQSxJQUFNLGFBQWEsU0FBYixVQUFhLEdBQU07QUFDdkIsY0FBWSxNQUFaO0FBQ0EsV0FBUyxJQUFUO0FBQ0E7QUFDRCxDQUpEOztrQkFNZSxjQUFNO0FBQ25CLE1BQUksV0FBSixFQUFnQjtBQUNkLFVBQU0sSUFBTixDQUFXLEVBQVg7QUFDQSxRQUFJLENBQUMsSUFBTCxFQUFVO0FBQ1IsYUFBTyxJQUFQO0FBQ0E7QUFDQTtBQUNEO0FBQ0YsR0FQRCxNQU9PO0FBQ0wsWUFBUSxJQUFSLENBQWEsdUNBQWI7QUFDRDtBQUNGLEM7Ozs7O0FDekVEOzs7Ozs7QUFFQSxvQkFBUSxVQUFDLENBQUQsRUFBRyxDQUFIO0FBQUEsU0FBUyxRQUFRLEdBQVIsQ0FBWSxDQUFDLENBQUQsRUFBRyxDQUFILENBQVosQ0FBVDtBQUFBLENBQVIiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwibGV0IHJlcXVlc3RGcmFtZSA9IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWVcbmxldCBjYW5jZWxGcmFtZSAgPSB3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWVcbmxldCBzY3JvbGxDaGFuZ2VkLCB5LCBwcmV2WSA9IC0xLCBpZGxlID0gdHJ1ZSwgcXVldWUgPSBbXSwgdGltZW91dCwgdGlja0lkLCBpbml0ID0gZmFsc2VcblxuaWYgKCFyZXF1ZXN0RnJhbWUpIHtcbiAgWydtcycsICdtb3onLCAnd2Via2l0JywgJ28nXS5ldmVyeShwcmVmaXggPT4ge1xuICAgIHJlcXVlc3RGcmFtZSA9IHdpbmRvd1twcmVmaXggKyAnUmVxdWVzdEFuaW1hdGlvbkZyYW1lJ107XG4gICAgY2FuY2VsRnJhbWUgID0gd2luZG93W3ByZWZpeCArICdDYW5jZWxBbmltYXRpb25GcmFtZSddIHx8XG4gICAgICAgICAgICAgICAgICAgd2luZG93W3ByZWZpeCArICdDYW5jZWxSZXF1ZXN0QW5pbWF0aW9uRnJhbWUnXTtcbiAgICByZXR1cm4gIXJlcXVlc3RGcmFtZTtcbiAgfSlcbn1cblxuY29uc3QgaXNTdXBwb3J0ZWQgPSAhIXJlcXVlc3RGcmFtZVxuXG5jb25zdCBlbmFibGUgPSAoKSA9PiB7XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBkZWJvdW5jZSlcbiAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBkZWJvdW5jZSlcbn1cblxuY29uc3QgZGlzYWJsZSA9ICgpID0+IHtcbiAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGRlYm91bmNlKVxuICBkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIGRlYm91bmNlKVxufVxuXG5jb25zdCBkZWJvdW5jZSA9ICgpID0+IHtcbiAgaWYgKCF0aWNrSWQpe1xuICAgIGRpc2FibGUoKVxuICAgIHRpY2soKVxuICB9XG59XG5cbmNvbnN0IHRpY2sgPSAoKSA9PiB7XG4gIHRpY2tJZCA9IHJlcXVlc3RGcmFtZShoYW5kbGVTY3JvbGwpXG59XG5cbmNvbnN0IGhhbmRsZVNjcm9sbCA9ICgpID0+IHtcbiAgeSA9IHdpbmRvdy5wYWdlWU9mZnNldFxuICBxdWV1ZS5mb3JFYWNoKCBmbiA9PiBmbih5LCBwcmV2WSkgKVxuXG4gIHNjcm9sbENoYW5nZWQgPSBmYWxzZVxuICBpZiAocHJldlkgIT0geSl7XG4gICAgc2Nyb2xsQ2hhbmdlZCA9IHRydWVcbiAgICBwcmV2WSA9IHlcbiAgfVxuXG4gIGlmIChzY3JvbGxDaGFuZ2VkKXtcbiAgICBjbGVhclRpbWVvdXQodGltZW91dClcbiAgICB0aW1lb3V0ID0gbnVsbFxuICB9IGVsc2UgaWYgKCF0aW1lb3V0KXtcbiAgICB0aW1lb3V0ID0gc2V0VGltZW91dChkZXRlY3RJZGxlLCAyMDApXG4gIH1cblxuICB0aWNrKClcbn1cblxuY29uc3QgZGV0ZWN0SWRsZSA9ICgpID0+IHtcbiAgY2FuY2VsRnJhbWUodGlja0lkKVxuICB0aWNrSWQgPSBudWxsXG4gIGVuYWJsZSgpXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNiID0+IHtcbiAgaWYgKGlzU3VwcG9ydGVkKXtcbiAgICBxdWV1ZS5wdXNoKGNiKVxuICAgIGlmICghaW5pdCl7XG4gICAgICBpbml0ID0gdHJ1ZVxuICAgICAgZGVib3VuY2UoKVxuICAgICAgZW5hYmxlKClcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgY29uc29sZS53YXJuKCdSZXF1ZXN0IEFuaW1hdGlvbiBGcmFtZSBub3Qgc3VwcG9ydGVkJylcbiAgfVxufSIsImltcG9ydCBzY3JvbGwgZnJvbSAnLi8uLi9zcmMvbWFpbi5qcydcblxuc2Nyb2xsKCAoeCx5KSA9PiBjb25zb2xlLmRpcihbeCx5XSkgKVxuIl19
